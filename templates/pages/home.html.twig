{% extends 'base.html.twig' %}

{% block title %}{{ parent() }} - Accueil{% endblock %}

{% block stylesheets %}
    {{ parent() }}
{% endblock %}

{% block body %}
    {# Jumbotron permet d'afficher un bloc en haut d'une page web, avec pour objectif d'attirer l'attention de l'utilisateur sur un élément en particulier. #}
    {# "mt-4" permet d'appliquer une marge externe en haut de 1.5rem.
    "m" = margin, "t" = top, "4" = 1.5rem #}
    <div class="container">
        <div class="jumbotron">
            <h1 class="display-4">Réservations de salles meurchinoises</h1>
        </div>
    </div>
    
    {# {{dump(data)}} #}
    <div class="calendar-container">
        <div id="calendrier">
        </div>

        <div class="reservation-legend-container">

            {% if is_granted('ROLE_ADMIN') or is_granted('ROLE_GESTIONNAIRESAL') %}
                <a href="{{ path('app_reservation_new') }}" id="reservation" class="btn btn-primary btn-sm">Ajouter une réservation</a>
            {% endif %}

            <div id='legend'>
                <h4>Légende</h4>

                <div class"legend__containers">
                    {# {% if reservation.title('Bureau des permanences') %}
                        <a href="{{ path('app_reservation_show', {'title': reservation.title}) }}">voir</a>
                        {% endif %} #}
                    <div class='legend__name1'>Bureau des permanences</div>           
                    <div class='legend__name2'>Salle de la Mairie</div>            
                    <div class='legend__name3'>Salle de formation</div>
                    <div class='legend__name4'>Salle des mariages</div>
                </div>
            </div>
        </div>
    </div>

{% endblock %}

{% block javascripts %}
<script>
    window.onload = () => {
        let calendarElt = document.querySelector("#calendrier");

        let calendar = new FullCalendar.Calendar(calendarElt, {
            initialView: 'timeGridWeek',
            locale: 'fr',
            timeZone: 'Europe/Paris',
            headerToolbar: {
                start: 'prev,next today',
                center: 'title',
                end: 'dayGridMonth,timeGridWeek,timeGridDay,listWeek'
            },
            buttonText: {
                today: 'Aujourd\'hui',
                month: 'Mois',
                week: 'Semaine',
                day: 'Jour',
                list: 'Liste'
            },
            events: {{ data|raw }},
            nowIndicator: true,
            editable: true,
            eventResizableFromStart: true,
            selectable: true,
            droppable: true,
            eventDrop: (infos) => {
                if(!confirm('Étes-vous sûr(e) de vouloir déplacer cette réservation ?')) {
                    infos.revert()
                }
            },
            
        })

        calendar.on('eventChange', (e) => {
            let url = `/api/${e.event.id}/edit`
            let donnees = {
                "title": e.event.title,
                "description": e.event.extendedProps.description,
                "start": e.event.start,
                "end": e.event.end,
                "backgroundColor": e.event.backgroundColor,
                "borderColor": e.event.borderColor,
                "textColor": e.event.textColor,
                "allDay": e.event.allDay
            }
            console.log(donnees);
            
            let xhr = new XMLHttpRequest

            xhr.open("PUT", url)
            xhr.send(JSON.stringify(donnees))
        })

        calendar.render();

    }
</script>

{% endblock %}
